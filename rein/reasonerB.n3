# USAGE : cwm reasonerB.n3 policyB.n3 ontB.n3  requestB.n3 --think --filter="filterB.n3"

@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix log:  <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix rein: <rein.n3#>.
@prefix reinb: <reinB.n3#>.
@prefix ont: <ontB.n3#>.
@prefix : <#> .

@forAll :c, :d, :d1, :x, :y, :p, :F, :G, :H.
@forSome :m, :p1, :d2.

#############################
## SETTING UP FORMULAE     ##
#############################

@forAll :request, :actor, :deontic, :action, :policy, :ontology, :F, :G.
{   :request a rein:Request.
    :request rein:requestedAction :action.
    :request rein:requester :actor.
    :request rein:requestType :deontic.
    :action.log:semantics log:includes { :action rein:controlledBy :policy }.
    :policy.log:semantics log:includes { :policy rein:usesOntology :ontology }.
    :ontology.log:semantics log:includes {:ontology rein:hasReasoner <> }.
    ( :policy.log:semantics
      :ontology.log:semantics
      :action.log:semantics
      :actor.log:semantics
      :deontic.log:semantics
      <rules.n3>.log:semantics) log:conjunction :F.
    :F log:conclusion :G.
} => { :F :gives :G }.


{   :F :gives :G. 
    :G log:includes {:x a ont:Student} 
} => { :x a :Student }.

###########################
## GETTING META POLICY   ##
###########################

#### DEFAULT BEHAVIOR ######
# if the action has a default value, use it
{   :c a rein:Request.
    :c rein:requester :x.
    :c rein:requestedAction :y.
    :F :gives :G.
    :F log:includes {:y reinb:default :d}} => {:c :default :d}.

# if the action does not have a default value, use the default associated with the policy
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :F :gives :G.
    :F log:notIncludes {:y reinb:default _:d}. 
    :F log:includes {_:p reinb:default :d} } => {:c :default :d}.

# if the action and the policy do not have a default value, use undefined
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :F :gives :G.
    :F log:notIncludes {:y reinb:default _:d}.
#    :F log:includes {:p a rein:Policy}.
    :F log:notIncludes {:p reinb:default _:d2} } => {:c :default :undefined}.


#### META META POLICY  ######
{ :c a rein:Request.
  :F :gives :G.
  :F log:includes {:p reinb:metameta :d}} => {:c :metameta :d}.

{ :c a rein:Request.
  :F :gives :G.
  :F log:notIncludes {_:p reinb:metameta _:m} } => {:c :metameta :undefined}.

#### MODALITY ######
{ :c a rein:Request.
  :F :gives :G.
  :F log:includes {:p reinb:modality :d} } => {:c :modality :d}.

{ :c a rein:Request.
  :F :gives :G.
  :F log:notIncludes {_:p reinb:modality _:m} } => {:c :modality :undefined}.

#############################
## USING DEFAULT BEHAVIOR  ##
#############################
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :c :default reinb:PermittedByDefault.
    :F :gives :G.
    :G log:notIncludes {:x reinb:posprohibited :y} } => {:x reinb:permitted :y}.
 
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :c :default reinb:PermittedByDefault.
    :F :gives :G.
    :G log:includes {:x reinb:posprohibited :y} } => {:x reinb:prohibited :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :c :default reinb:ProhibitedByDefault.
    :F :gives :G.
    :G log:notIncludes {:x reinb:pospermitted :y} } => {:x reinb:prohibited :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :c :default reinb:ProhibitedByDefault.
    :F :gives :G.
    :G log:includes {:x reinb:pospermitted :y} } => {:x reinb:permitted :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :c :default :undefined } => {:x reinb:nobehavior :y}.

#####################
## USING MODALITY  ##
#####################

###### POSITIVE MODALITY #######
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality reinb:Positive.
    :F :gives :G.
    :G log:includes {:x reinb:pospermitted :y} } => {:x reinb:permitted :y}.
    
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality reinb:Positive.
    :F :gives :G.
    :G log:notIncludes {:x reinb:pospermitted :y}.
    :G log:includes {:x reinb:posprohibited :y} } => {:x reinb:prohibited :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality reinb:Positive.
    :F :gives :G.
    :G log:notIncludes {:x reinb:pospermitted :y}.
    :G log:notIncludes {:x reinb:posprohibited :y} } => {:x reinb:undefined :y}.
   
###### NEGATIVE MODALITY #######
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality reinb:Negative.
    :F :gives :G.
    :G log:includes {:x reinb:posprohibited :y} } => {:x reinb:prohibited :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality reinb:Negative.
    :F :gives :G.
    :G log:notIncludes {:x reinb:posprohibited :y}.
    :G log:includes {:x reinb:pospermitted :y} } => {:x reinb:permitted :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality reinb:Negative.
    :F :gives :G.
    :G log:notIncludes {:x reinb:pospermitted :y}.
    :G log:notIncludes {:x reinb:posprohibited :y} } => {:x reinb:undefined :y}.

###### UNDEFINED MODALITY #######
{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality :undefined.
    :F :gives :G.
    :G log:includes {:x reinb:pospermitted :y}. 
    :G log:includes {:x reinb:posprohibited :y} } => {:x reinb:conflict :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality :undefined.
    :F :gives :G.
    :G log:notIncludes {:x reinb:pospermitted :y}. 
    :G log:includes {:x reinb:posprohibited :y} } => {:x reinb:prohibited :y}.

{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality :undefined.
    :F :gives :G.
    :G log:includes {:x reinb:pospermitted :y}.
    :G log:notIncludes {:x reinb:posprohibited :y} } => {:x reinb:permitted :y}.


{   :c a rein:Request.
    :c rein:requestedAction :y.
    :c rein:requester :x.
    :x reinb:nobehavior :y.
    :c :metameta reinb:CheckModalityFirst.
    :c :modality :undefined.
    :F :gives :G.
    :G log:notIncludes {:x reinb:pospermitted :y}.
    :G log:notIncludes {:x reinb:posprohibited :y} } => {:x reinb:undefined :y}.


#######################
## USING PRIORITIES  ##
#######################

#end
